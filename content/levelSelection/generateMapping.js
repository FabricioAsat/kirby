import { k } from "../../main";

export function generateMappingsLevelSelection(tileType) {
  return {
    0: () => [
      k.sprite(tileType, { anim: "top-left-grass" }),
      k.area({ shape: new k.Rect(k.vec2(0), 16, 5) }),
      "passthrough",
      k.body({ isStatic: true }),
      k.offscreen({ hide: true }),
    ],
    1: () => [
      k.sprite(tileType, { anim: "top-middle-grass" }),
      k.area({ shape: new k.Rect(k.vec2(0), 16, 5) }),
      "passthrough",
      k.body({ isStatic: true }),
      k.offscreen({ hide: true }),
    ],
    2: () => [
      k.sprite(tileType, { anim: "top-right-grass" }),
      k.area({ shape: new k.Rect(k.vec2(0), 16, 5) }),
      "passthrough",
      k.body({ isStatic: true }),
      k.offscreen({ hide: true }),
    ],
    3: () => [k.sprite(tileType, { anim: "middle-left-ground" }), k.offscreen({ hide: true })],
    4: () => [k.sprite(tileType, { anim: "middle-middle-ground" }), k.offscreen({ hide: true })],
    5: () => [k.sprite(tileType, { anim: "middle-right-ground" }), k.offscreen({ hide: true })],
    6: () => [k.sprite(tileType, { anim: "bottom-left-ground" }), k.offscreen({ hide: true })],
    7: () => [k.sprite(tileType, { anim: "bottom-middle-ground" }), k.offscreen({ hide: true })],
    8: () => [k.sprite(tileType, { anim: "bottom-middle-brick" }), k.offscreen({ hide: true })],
    9: () => [k.sprite(tileType, { anim: "bottom-right-brick" }), k.offscreen({ hide: true })],
    a: () => [k.sprite(tileType, { anim: "full-ground" }), k.offscreen({ hide: true })],
    b: () => [k.sprite(tileType, { anim: "medium-ground" }), k.offscreen({ hide: true })],
    c: () => [k.sprite(tileType, { anim: "empty-ground" }), k.offscreen({ hide: true })],
    d: () => [
      k.sprite(tileType, { anim: "top-middle-brick" }),
      k.area({ shape: new k.Rect(k.vec2(0), 16, 5) }),
      "passthrough",
      k.body({ isStatic: true }),
      k.offscreen({ hide: true }),
    ],
    e: () => [
      k.sprite(tileType, { anim: "top-right-brick" }),
      k.area({ shape: new k.Rect(k.vec2(0), 16, 5) }),
      "passthrough",
      k.body({ isStatic: true }),
      k.offscreen({ hide: true }),
    ],
    f: () => [k.sprite(tileType, { anim: "middle-top-left-grass" }), k.offscreen({ hide: true })],
    g: () => [k.sprite(tileType, { anim: "bottom-left-brick" }), k.offscreen({ hide: true })],
    h: () => [
      k.sprite(tileType, { anim: "top-left-brick" }),
      k.area({ shape: new k.Rect(k.vec2(0), 16, 5) }),
      "passthrough",
      k.body({ isStatic: true }),
      k.offscreen({ hide: true }),
    ],
    i: () => [k.sprite(tileType, { anim: "bottom-right-ground" }), k.offscreen({ hide: true })],
    j: () => [k.sprite(tileType, { anim: "middle-top-right-grass" }), k.offscreen({ hide: true })],
    "*": () => [
      k.sprite("level-1-tileset", { anim: "middle-middle-grass" }),
      k.area({ shape: new k.Rect(k.vec2(0), 16, 16) }),
      k.body({ isStatic: true }),
      k.offscreen({ hide: true }),
    ],
    "(": () => [k.sprite("door", { anim: "top-left-door" }), k.offscreen({ hide: true }), "door"],
    ")": () => [k.sprite("door", { anim: "top-right-door" }), k.offscreen({ hide: true }), "door"],
    "[": () => [k.sprite("door", { anim: "bottom-left-door" }), k.offscreen({ hide: true }), "door"],
    "]": () => [k.sprite("door", { anim: "bottom-right-door" }), k.offscreen({ hide: true }), "door"],

    "!": () => [k.sprite("numbers", { anim: "left-1" }), k.offscreen({ hide: true })],
    "#": () => [k.sprite("numbers", { anim: "right-1" }), k.offscreen({ hide: true })],
    $: () => [k.sprite("numbers", { anim: "left-2" }), k.offscreen({ hide: true })],
    "%": () => [k.sprite("numbers", { anim: "right-2" }), k.offscreen({ hide: true })],
    "&": () => [k.sprite("numbers", { anim: "left-3" }), k.offscreen({ hide: true })],
    "/": () => [k.sprite("numbers", { anim: "right-3" }), k.offscreen({ hide: true })],
    "=": () => [k.sprite("numbers", { anim: "left-4" }), k.offscreen({ hide: true })],
    "?": () => [k.sprite("numbers", { anim: "right-4" }), k.offscreen({ hide: true })],
  };
}
